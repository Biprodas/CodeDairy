# Bubble Sort : [ Complexity: O(n^2) ]
void bubble_sort(int Ar[], int n){
    for(int i=0; i<n-1; i++){
        for(int j=0; j<n-1-i; j++) {
            if(Ar[j] > Ar[j+1]){
                swap(Ar[j],Ar[j+1]);
            }
        }
    }
}
--------------------------------------------
Selection Sort : [ Complexity : O(n^2) ]
void selection_sort(int Ar[], int n){
    int mn;
    for(int i=0; i<n; i++){
        mn = i;
        for(int j=i+1; j<n; j++){
            if(Ar[j] < Ar[mn]) 
                mn = j;
        }
        swap(Ar[mn], Ar[i]); 
    }
}
--------------------------------------------
Insertion Sort : [ Complexity: O(n^2) ]
void insertion_sort(int Ar[], int n){
    for(int i=0 ; i<n; i++){
        int tmp = Ar[i];
        int j=i;
        while(j>0  && tmp<Ar[j-1]){
            Ar[j] = Ar[j-1];   
            j--;
        }
        Ar[j] = tmp;
    }
}
--------------------------------------------
