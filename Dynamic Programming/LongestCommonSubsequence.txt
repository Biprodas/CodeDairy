#include<bits/stdc++.h>
using namespace std;
#define MX 1001
char A[MX], B[MX];
int dp[MX][MX];
bool visited[MX][MX];
string res;

int calcLCS(int i, int j){
    if(A[i]=='\0' || B[j]=='\0') return 0;
    if(visited[i][j]) return dp[i][j];

    int ans = 0;
    if(A[i]==B[j])
        ans = 1 + calcLCS(i+1,j+1);
    else
        ans = max(calcLCS(i+1, j), calcLCS(i, j+1));
    visited[i][j] = 1;

    return dp[i][j] = ans;
}

//after running DP
void printLCS(int i, int j){
    if(A[i]=='\0' || B[j]=='\0'){
        cout<<res<<endl;
        return;
    }
    if(A[i]==B[j]){
        res += A[i];
        printLCS(i+1, j+1);
        res.erase(res.end()-1);
    }
    else{
        if(dp[i+1][j]>dp[i][j+1])
            printLCS(i+1,j);
        else if(dp[i+1][j]<dp[i][j+1])
            printLCS(i,j+1);
        else{
            printLCS(i+1,j);
            printLCS(i,j+1);
        }
    }
}

int main(){
    cin>>A>>B;
    cout<<calcLCS(0,0)<<endl;
    printLCS(0,0);
}
