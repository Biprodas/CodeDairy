#include<bits/stdc++.h>
using namespace std;
#define maxN 100
#define maxW 1000
int n, cap;
int dp[maxN+1][maxW+1];
int wt[maxN+1], cost[maxW+1];

int knapsack(int i, int w){
    if(i==n+1) return 0;
    if(dp[i][w] != -1) return dp[i][w];

    int profit1 = 0, profit2 = 0;
    if(w+wt[i] <= cap) 
	profit1 = cost[i]+knapsack(i+1, w+wt[i]);	//try with next item
    profit2 = knapsack(i+1, w);

    return dp[i][w] = max(profit1, profit2);
} 

int main(){
    //freopen("in.txt","r",stdin);
    memset(dp,-1,sizeof(dp));
    cin>>n>>cap;
    for(int i=1;i<=n;i++){
        cin>>wt[i]>>cost[i];
    }
    cout<<knapsack(1,0); //1 based
    return 0;
}
