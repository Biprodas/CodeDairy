//INPUTA A GRAPH USING ADJACENCY LIST (using vector)
/*6 8 //"number of node" - "number of edge"
1 2  //node1-node2
1 4
2 4
2 5
4 5
5 3
3 6
6 6 */

#define MX 100000 //maximum node
vector<int>edges[MX];
vector<int>cost[MX]; //parallel vector to store costs;
int main(){
    int N,E, n1,n2;
    cin>>N>>E;
    for(int i=1;i<=E;i++){ //number of edges
        cin>>n1>>n2;
        edges[n1].push_back(n2);
        edges[n2].push_back(n1); //we know undirected graph is symetric.
        cost[x].push_back(1);
        cost[y].push_back(1);
     }
return 0;
}

//print out the adjacency node of edge[3]
size= edges[3].size()
cout<<edges[3]<<"-> ";
for(int i=0;i<size;i++){
    cout<<edges[3][i]<<" ";
}