//find the shortest distance between two nodes where the edges have the weights 0 or 1
void bfs(int s){
            deque <int > Q;     //Double-ended queue
            Q.push_back( start); 
            distance[s]= 0;       
            while( !Q.empty ()){
                int v = Q.front();
                Q.pop_front(); 
                for( int i = 0 ; i < edges[v].size(); i++){
                    if(distance[edges[v][i].first] > distance[v] + edges[v][i].second){
                       distance[edges[v][i].first]= distance[v] + edges[v][i].second;

 /*if edge weight between v and its neighbour is 0 then push it to front of
        double ended queue else push it to back*/

                    if(edges[v][i].second == 0)
                        Q.push_front( edges[ v ][ i ].first);
                    else
                        Q.push_back( edges[ v ][ i ].first);
                }
              }
           }
    }