#include<bits/stdc++.h>
using namespace std;
#define MX 100005
vector<int> adj[MX];
bool vis[MX];
int c=1;

void dfs(int s){
    vis[s]=true;
    for(int i=0;i<adj[s].size();i++){
        if(!vis[adj[s][i]]){
            c++;
            dfs(adj[s][i]);
        }
    }
}

int main(){
    int N,E, n1,n2, x;
    cin>>N>>E;
    for(int i=1;i<=E;i++){ //number of edges
        cin>>n1>>n2;
        adj[n1].push_back(n2);
        adj[n2].push_back(n1);
     }
     cin>>x;
     dfs(x);
     cout<<N-c;
return 0;
}

//Problem-link: https://www.hackerearth.com/practice/algorithms/graphs/depth-first-search/tutorial/