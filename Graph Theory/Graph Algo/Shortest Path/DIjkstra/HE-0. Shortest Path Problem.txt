#include<bits/stdc++.h>
using namespace std;
#define pii pair<int,int>
#define pb push_back
#define lng long long
#define MX 1000006

vector<pii> G[MX];
priority_queue<pii,vector<pii>,greater<pii>> pq; //minHeap

lng n, m , u , v , w , dis[MX];

void Dijkstra(int s){
    dis[1]=0;
    pq.push({dis[1],s});
    while(!pq.empty()){
        u= pq.top().second;
        pq.pop();
        for(int i=0;i<G[u].size();i++){
            v= G[u][i].second;
            w= G[u][i].first;
            //Relaxation
            if(dis[v] > dis[u]+w){
		        dis[v]= dis[u]+w;
                pq.push({dis[v],v});
            }
        }
    }
}
void print(int n){
    for(int i=2;i<=n;i++) cout<<dis[i]<<' ';
}
int main(){
    cin>>n>>m;
    for(int i=1;i<=n;i++){
        dis[i]=1e9;
    }
    while(m--){
        cin>>u>>v>>w;
        G[u].pb({w,v});
    }
    
    Dijkstra(1);
    print(n);
    
    return 0;
}