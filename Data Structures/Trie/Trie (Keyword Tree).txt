//problem: https://www.hackerearth.com/practice/data-structures/advanced-data-structures/trie-keyword-tree/tutorial/
#include<bits/stdc++.h>
using namespace std;

struct node
{
    int data;
    bool endmark;
    node *next[26+1];
    node(){
        data=0;
	endmark= false;
	for(int i=0;i<26;i++) next[i]= NULL;
    }
} *root;

void insert(char *str, int wt)
{
    int len= strlen(str);
	node *curr=root;
	for(int i=0;i<len;i++){
		int id=str[i]-'a';
		if(curr->next[id]==NULL){
            		curr->next[id]=new node();
		}
		curr->next[id]->data= max(wt, curr->next[id]->data);
		curr=curr->next[id];
	}
	curr->endmark= true;

}

int search(char *str)
{
    int len= strlen(str);
	node *curr=root;
	for(int i=0;i<len;i++){
		int id=str[i]-'a';
		if(curr->next[id]==NULL) return -1;
		curr=curr->next[id];
	}
	return curr->data; //word ta trie te ace
}

void del(node *cur)
{
      for(int i=0;i<26;i++)
             if(cur->next[i])
                  del(cur->next[i]) ;

      delete(cur) ;
}

int main(){
	root= new node();
	int n, q, w;
	char arr[1000006];
	cin>>n>>q;
	while(n--){
        cin>>arr>>w;
        insert(arr, w);
	}
	while(q--){
        cin>>arr;
        cout<<search(arr)<<endl;
	}
	del(root); //delete the trie
	return 0;
}
