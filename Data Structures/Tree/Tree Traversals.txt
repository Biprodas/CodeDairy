1. Depth First Traversals:
   (a) Inorder
   (b) Preorder
   (c) Postorder

2.  Breadth First or Level Order Traversal
/*
struct node{
    int data;
    node* left;
    node* right;
}*/

void preOrder(node *root) {
    if(root==NULL) return;
    cout<<root->data<<" ";
    preOrder(root->left);
    preOrder(root->right);
}
void postOrder(node *root) {
    if(root){
        postOrder(root->left);
        postOrder(root->right);
        cout<<root->data<<" ";
    }
}
void inOrder(node *root) {
    if(root){
        inOrder(root->left);
        cout<<root->data<<" ";
        inOrder(root->right);
    }
}

void LevelOrder(node * root){
  queue<node *> q;
    q.push(root);
    node* nd;
    while(!q.empty()){
        nd = q.front();
        cout<<nd->data<<" ";
        q.pop();
        if(nd->left!=NULL)
           q.push(nd->left);
        if(nd->right!=NULL)
           q.push(nd->right);
    }
}
